---
import { getCollection } from 'astro:content';
import BlogLayout from '../../components/BlogLayout.astro';

import FeaturedHero from '../../components/FeaturedHero.astro';
import RecentPosts from '../../components/RecentPosts.astro';
import BlogPostCard from '../../components/BlogPostCard.astro';


const posts = await getCollection('blog');
const sorted = posts.sort((a,b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const featured = sorted.slice(0,3);
const tags = Array.from(new Set(posts.flatMap(p => p.data.tags || [])));
---
<BlogLayout>
  <div class="blog-page">
    <section class="container mb-4 blog-hero">
      <FeaturedHero posts={featured} />
    </section>

    <section class="container mb-4 blog-search">
      <div class="row g-3 search-row">
        <div class="col-12">
          <div role="search">
            <label for="blog-search" class="visually-hidden">Search posts</label>
            <input id="blog-search" type="text" class="form-control" placeholder="Search posts..." />
          </div>
        </div>
        <div class="col-12">
          <div class="tag-filter">
            {tags.map(t => <span class="badge bg-secondary me-1" data-tag={t}>{t}</span>)}
          </div>
        </div>
      </div>
    </section>

    <section class="container blog-posts">
      <div class="row">
        <div class="col-lg-8">
          <div class="row g-4" id="posts-list">
            {sorted.map(post => (
              <div class="col-sm-6">
                <BlogPostCard post={post} />
              </div>
            ))}
          </div>
        </div>
        <div class="col-lg-4">
          <RecentPosts posts={sorted.slice(0,5)} />
        </div>
      </div>
    </section>
    <script src="/js/blog-search.js" defer></script>
    <style>
      .tag-filter .badge { cursor: pointer; }
      .tag-filter .badge.active { background: #0b3d91; }
    </style>
  </div>
</BlogLayout>
