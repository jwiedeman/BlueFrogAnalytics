---
import DashboardLayout from '../components/DashboardLayout.astro';

const title = 'Dashboard';
const description = 'Your personal Blue Frog Analytics dashboard.';
---
<DashboardLayout title={title} description={description}>
  <section class="container py-5">
    <h1 class="text-center mb-4">Dashboard Overview</h1>
    <p id="user-email" class="text-center mb-5"></p>
    <div class="table-responsive">
      <table class="table table-dark table-striped table-hover">
        <thead>
          <tr>
            <th>Domain</th>
            <th>SEO</th>
            <th>Performance</th>
            <th>Analytics</th>
          </tr>
        </thead>
        <tbody id="domain-body"></tbody>
      </table>
    </div>
    <div class="mt-4">
      <h2 class="h5">Alerts</h2>
      <p>No alerts at this time.</p>
    </div>
  </section>
  <script type="module">
    document.addEventListener('DOMContentLoaded', () => {
      const API_BASE =
        window.API_BASE_URL || 'https://api.bluefroganalytics.com:6001';
      const emailEl = document.getElementById('user-email');
      const bodyEl = document.getElementById('domain-body');
      let domains = [];
      const dataMap = {};

      const render = () => {
        bodyEl.innerHTML = '';
        if (!domains.length) {
          bodyEl.innerHTML =
            '<tr><td colspan="4" class="text-center">No domains added.</td></tr>';
          return;
        }
        domains.forEach(name => {
          const info = dataMap[name] || {};
          const seo = info.desktop_seo_score || info.mobile_seo_score;
          const perf = info.desktop_performance_score || info.mobile_performance_score;
          const analytics = info.contains_gtm_or_ga ? 'Yes' : info.contains_gtm_or_ga === false ? 'No' : '--';
          const badge = score => {
            if (typeof score !== 'number') return 'bg-secondary';
            if (score >= 90) return 'bg-success';
            if (score >= 50) return 'bg-warning';
            return 'bg-danger';
          };
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${name}</td>
            <td><span class="badge ${badge(seo)}">${seo ?? '--'}</span></td>
            <td><span class="badge ${badge(perf)}">${perf ?? '--'}</span></td>
            <td><span class="badge bg-secondary">${analytics}</span></td>`;
          bodyEl.appendChild(row);
        });
      };

      const init = () => {
        window.onAuthStateChanged(window.firebaseAuth, async user => {
          if (!user) {
            window.location.href = '/login';
            return;
          }
          emailEl.textContent = user.email;
          try {
            const token = await user.getIdToken();
            const res = await fetch(`${API_BASE}/api/profile`, {
              headers: { Authorization: `Bearer ${token}` }
            });
            if (res.ok) {
              const profile = await res.json();
              domains = Array.isArray(profile.domains) ? profile.domains : [];
              for (const d of domains) {
                try {
                  const r = await fetch(
                    `${API_BASE}/api/domain-info?domain=${encodeURIComponent(d)}`,
                    { headers: { Authorization: `Bearer ${token}` } }
                  );
                  if (r.ok) {
                    dataMap[d] = await r.json();
                  }
                } catch {}
              }
              render();
            } else {
              render();
            }
          } catch (err) {
            render();
          }
        });
      };

      if (window.firebaseAuth) {
        init();
      } else {
        document.addEventListener('firebase-init', init, { once: true });
      }
    });
  </script>
</DashboardLayout>
