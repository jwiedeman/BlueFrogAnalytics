---
import DashboardLayout from '../../components/DashboardLayout.astro';

const title = 'SEO';
const description = 'Search engine optimization insights.';
---
<DashboardLayout title={title} description={description}>
  <section class="container py-5">
    <div class="text-center mb-4">
      <h1 class="mb-0">SEO Audit</h1>
      <p>Run Google Lighthouse SEO diagnostics for a page.</p>
    </div>
    <form id="seo-dashboard-form" class="row gy-2 gx-3 align-items-end mb-3 justify-content-center">
      <div class="col-md-6">
        <label for="seo-dashboard-url" class="form-label">Enter URL</label>
        <input id="seo-dashboard-url" type="url" class="form-control" placeholder="https://example.com" required />
      </div>
      <div class="col-auto">
        <button type="submit" class="btn btn-primary mt-3">Run Audit</button>
      </div>
    </form>
    <div id="seo-dashboard-results"></div>
    <div id="seo-saved" class="mt-5">
      <h2 class="h4 mb-3">Saved SEO Scores</h2>
      <div class="row">
        <div class="col-md-4 mb-4">
          <label for="seo-domain-select" class="form-label">Domain</label>
          <select id="seo-domain-select" class="form-select"></select>
          <div id="seo-domain-info" class="mt-3"></div>
        </div>
        <div class="col-md-8">
          <div class="table-responsive">
            <table class="table table-striped">
              <thead>
                <tr><th>Page</th><th>SEO Score</th></tr>
              </thead>
              <tbody id="seo-pages-body"></tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </section>
  <script type="module">
    document.addEventListener('DOMContentLoaded', () => {
      const init = () => {
        window.onAuthStateChanged(window.firebaseAuth, user => {
          if (!user) {
            window.location.href = '/login';
          }
        });
      };
      if (window.firebaseAuth) {
        init();
      } else {
        document.addEventListener('firebase-init', init, { once: true });
      }
    });
  </script>
  <script type="module">
    document.addEventListener('DOMContentLoaded', () => {
      const API_BASE =
        window.API_BASE_URL || 'https://api.bluefroganalytics.com:6001';
      const domainSelect = document.getElementById('seo-domain-select');
      const domainInfo = document.getElementById('seo-domain-info');
      const pagesBody = document.getElementById('seo-pages-body');
      let domains = [];
      const domainData = {};

      const badge = score => {
        if (typeof score !== 'number') return 'bg-secondary';
        if (score >= 90) return 'bg-success';
        if (score >= 50) return 'bg-warning';
        return 'bg-danger';
      };

      const renderDomain = name => {
        const info = domainData[name] || {};
        const seo = info.desktop_seo_score || info.mobile_seo_score;
        domainInfo.innerHTML =
          typeof seo === 'number'
            ? `<span class="badge ${badge(seo)}">${seo}</span>`
            : '<span class="badge bg-secondary">--</span>';
      };

      const renderPages = pages => {
        pagesBody.innerHTML = '';
        if (!pages.length) {
          pagesBody.innerHTML =
            '<tr><td colspan="2" class="text-center">No pages found.</td></tr>';
          return;
        }
        pages.forEach(p => {
          const score = p.desktop_seo_score || p.mobile_seo_score;
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <th>${p.url}</th>
            <td><span class="badge ${badge(score)}">${score ?? '--'}</span></td>`;
          pagesBody.appendChild(tr);
        });
      };

      const loadDomainData = async name => {
        const user = window.firebaseAuth.currentUser;
        if (!user) return;
        const token = await user.getIdToken();
        try {
          const res = await fetch(
            `${API_BASE}/api/domain-info?domain=${encodeURIComponent(name)}`,
            { headers: { Authorization: `Bearer ${token}` } }
          );
          if (res.ok) domainData[name] = await res.json();
        } catch {}
        renderDomain(name);
        try {
          const r = await fetch(
            `${API_BASE}/api/domain-pages?domain=${encodeURIComponent(name)}`,
            { headers: { Authorization: `Bearer ${token}` } }
          );
          const pages = r.ok ? await r.json() : [];
          renderPages(pages);
        } catch {
          renderPages([]);
        }
      };

      const loadProfile = async user => {
        const token = await user.getIdToken();
        try {
          const res = await fetch(`${API_BASE}/api/profile`, {
            headers: { Authorization: `Bearer ${token}` }
          });
          if (res.ok) {
            const profile = await res.json();
            domains = Array.isArray(profile.domains) ? profile.domains : [];
          }
        } catch {}
        domainSelect.innerHTML = '';
        domains.forEach(d => {
          const opt = document.createElement('option');
          opt.value = d;
          opt.textContent = d;
          domainSelect.appendChild(opt);
        });
        if (domains.length) loadDomainData(domains[0]);
      };

      const init = () => {
        window.onAuthStateChanged(window.firebaseAuth, user => {
          if (!user) {
            window.location.href = '/login';
            return;
          }
          loadProfile(user);
        });
        domainSelect.addEventListener('change', () => {
          loadDomainData(domainSelect.value);
        });
      };

      if (window.firebaseAuth) {
        init();
      } else {
        document.addEventListener('firebase-init', init, { once: true });
      }
    });
  </script>
  <script src="/js/seo-dashboard.js" type="module"></script>
</DashboardLayout>
