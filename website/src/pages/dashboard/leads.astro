---
import DashboardLayout from '../../components/DashboardLayout.astro';

const title = 'Leads';
const description = 'View and purchase collected leads.';
---
<DashboardLayout title={title} description={description}>
  <section class="container py-5">
    <h1 class="text-center mb-4">Leads</h1>
    <ul class="nav nav-pills mb-4" id="lead-tabs">
      <li class="nav-item">
        <button class="nav-link active" data-type="maps">Maps Leads</button>
      </li>
      <li class="nav-item">
        <button class="nav-link" data-type="domains">Domains</button>
      </li>
    </ul>
    <div class="row mb-3">
      <div class="col-md-6">
        <input id="lead-search" type="text" class="form-control" placeholder="Search" />
      </div>
    </div>
    <div class="table-responsive">
      <table class="table table-striped">
        <thead id="lead-head"></thead>
        <tbody id="lead-body"></tbody>
      </table>
    </div>
    <div class="d-flex justify-content-between align-items-center mt-3">
      <button id="prev-page" class="btn btn-secondary" disabled>Previous</button>
      <span id="page-info"></span>
      <button id="next-page" class="btn btn-secondary" disabled>Next</button>
    </div>
  </section>
  <script type="module">
    document.addEventListener('DOMContentLoaded', () => {
      const API_BASE =
        window.API_BASE_URL || 'https://api.bluefroganalytics.com:6001';
      const headEl = document.getElementById('lead-head');
      const bodyEl = document.getElementById('lead-body');
      const searchEl = document.getElementById('lead-search');
      const prevBtn = document.getElementById('prev-page');
      const nextBtn = document.getElementById('next-page');
      const pageInfo = document.getElementById('page-info');
      const tabs = document.querySelectorAll('#lead-tabs .nav-link');
      let type = 'maps';
      let page = 1;

      const render = data => {
        headEl.innerHTML = '';
        bodyEl.innerHTML = '';
        if (type === 'domains') {
          headEl.innerHTML = '<tr><th>Domain</th></tr>';
          data.results.forEach(r => {
            const tr = document.createElement('tr');
            tr.innerHTML = `<td>${r.domain}</td>`;
            bodyEl.appendChild(tr);
          });
        } else {
          headEl.innerHTML =
            '<tr><th>Business</th><th>Address</th><th>Phone</th><th>Website</th></tr>';
          data.results.forEach(r => {
            const tr = document.createElement('tr');
            tr.innerHTML = `<td>${r.name || ''}</td><td>${r.address || ''}</td><td>${r.phone || ''}</td><td>${r.website || ''}</td>`;
            bodyEl.appendChild(tr);
          });
        }
        const totalPages = Math.max(1, Math.ceil(data.total / data.pageSize));
        pageInfo.textContent = `Page ${data.page} of ${totalPages}`;
        prevBtn.disabled = data.page <= 1;
        nextBtn.disabled = data.page >= totalPages;
      };

      const load = async user => {
        const token = await user.getIdToken();
        const url = new URL('/api/leads', API_BASE);
        url.searchParams.set('type', type);
        url.searchParams.set('page', page);
        const q = searchEl.value.trim();
        if (q) url.searchParams.set('q', q);
        try {
          const res = await fetch(url.toString(), {
            headers: { Authorization: `Bearer ${token}` }
          });
          if (res.ok) {
            render(await res.json());
          }
        } catch {}
      };

      const init = () => {
        window.onAuthStateChanged(window.firebaseAuth, user => {
          if (!user) {
            window.location.href = '/login';
            return;
          }
          load(user);
          searchEl.addEventListener('input', () => {
            page = 1;
            load(user);
          });
          prevBtn.addEventListener('click', () => {
            if (page > 1) {
              page--;
              load(user);
            }
          });
          nextBtn.addEventListener('click', () => {
            page++;
            load(user);
          });
          tabs.forEach(tab => {
            tab.addEventListener('click', () => {
              tabs.forEach(t => t.classList.remove('active'));
              tab.classList.add('active');
              type = tab.dataset.type;
              page = 1;
              load(user);
            });
          });
        });
      };
      if (window.firebaseAuth) {
        init();
      } else {
        document.addEventListener('firebase-init', init, { once: true });
      }
    });
  </script>
</DashboardLayout>
