---
import BaseHead from './BaseHead.astro';
import CustomHeader from './CustomHeader.astro';
import CustomFooter from './CustomFooter.astro';
import FirebaseScripts from './FirebaseScripts.astro';
import ApiConfig from './ApiConfig.astro';

const { title, description } = Astro.props;

// Navigation for authenticated users inside the dashboard
const mainNav = [
  { label: 'Dashboard Home', link: '/dashboard' },
  { label: 'Domains', link: '/dashboard/domains' },
  { label: 'Performance', link: '/dashboard/performance' },
  { label: 'SEO', link: '/dashboard/seo' },
  { label: 'Accessibility', link: '/dashboard/accessibility' },
  { label: 'QA', link: '/dashboard/qa' },
  { label: 'Security', link: '/dashboard/security' },
  { label: 'SSL', link: '/dashboard/ssl' },
  {
    label: 'Specification',
    link: '/dashboard/specification',
    children: [
      { label: 'Components', link: '/dashboard/specification/components' },
      { label: 'Events', link: '/dashboard/specification/events' },
      { label: 'Dimensions', link: '/dashboard/specification/dimensions' },
      { label: 'Products', link: '/dashboard/specification/products' },
    ],
  },
];
const currentPath =
  Astro.url.pathname === '/'
    ? '/'
    : Astro.url.pathname.replace(/\/$/, '').toLowerCase();
function inPath(item) {
  const link = item.link === '/' ? '/' : item.link.replace(/\/$/, '').toLowerCase();
  if (link === '/dashboard') {
    return currentPath === '/dashboard';
  }
  return currentPath === link || currentPath.startsWith(link + '/');
}
---
<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body class="d-flex flex-column min-vh-100">
    <CustomHeader />
    <div class="d-md-none p-2">
      <button
        class="btn btn-primary"
        type="button"
        data-bs-toggle="offcanvas"
        data-bs-target="#dashOffcanvas"
        aria-controls="dashOffcanvas"
      >
        Menu
      </button>
    </div>
    <div
      class="offcanvas offcanvas-start"
      tabindex="-1"
      id="dashOffcanvas"
      aria-labelledby="dashOffcanvasLabel"
    >
      <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="dashOffcanvasLabel">Dashboard Menu</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="offcanvas"
          aria-label="Close"
        ></button>
      </div>
      <div class="dashboard-side-nav offcanvas-body p-0">
        <ul class="nav flex-column pt-3">
          {mainNav.map((item, i) => (
            item.children ? (
              <li class="nav-item" key={`ocp-${i}`}>
                <button
                  class={`btn btn-toggle text-dark text-start w-100${inPath(item) ? '' : ' collapsed'}`}
                  type="button"
                  data-bs-toggle="collapse"
                  data-bs-target={`#ocdash-${i}`}
                  aria-expanded={inPath(item) ? 'true' : 'false'}
                >
                  {item.label}
                </button>
                <div class={`collapse${inPath(item) ? ' show' : ''}`} id={`ocdash-${i}`}>
                  <ul class="btn-toggle-nav list-unstyled">
                    {item.children.map((child, j) => (
                      <li class="nav-item" key={`occ-${i}-${j}`}>
                        <a class={`nav-link text-dark${inPath(child) ? ' active' : ''}`} href={child.link}>
                          {child.label}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              </li>
            ) : (
              <li class="nav-item" key={`ocp-${i}`}>
                <a
                  class={`nav-link text-dark${inPath(item) ? ' active' : ''}`}
                  href={item.link}
                >
                  {item.label}
                </a>
              </li>
            )
          ))}
        </ul>
      </div>
    </div>
    <div class="dashboard-container container-fluid flex-grow-1">
      <div class="row">
        <nav class="col-md-2 d-none d-md-block bg-dark dashboard-side-nav d-flex flex-column">
          <ul class="nav flex-column pt-3">
            {mainNav.map((item, i) => (
              item.children ? (
                <li class="nav-item" key={`p-${i}`}>
                  <button
                    class={`btn btn-toggle text-light text-start w-100${inPath(item) ? '' : ' collapsed'}`}
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target={`#dash-${i}`}
                    aria-expanded={inPath(item) ? 'true' : 'false'}
                  >
                    {item.label}
                  </button>
                  <div class={`collapse${inPath(item) ? ' show' : ''}`} id={`dash-${i}`}>
                    <ul class="btn-toggle-nav list-unstyled">
                      {item.children.map((child, j) => (
                        <li class="nav-item" key={`c-${i}-${j}`}>
                          <a class={`nav-link text-light${inPath(child) ? ' active' : ''}`} href={child.link}>
                            {child.label}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </div>
                </li>
              ) : (
                <li class="nav-item" key={`p-${i}`}>
                  <a class={`nav-link text-light${inPath(item) ? ' active' : ''}`} href={item.link}>
                    {item.label}
                  </a>
                </li>
              )
            ))}
          </ul>
          <div class="mt-auto mb-3"></div>
        </nav>
        <main id="main-content" class="col-md-10 py-0 flex-grow-1">
          <slot />
        </main>
      </div>
    </div>
    <CustomFooter />
    <FirebaseScripts />
    <ApiConfig />
    <script src="/js/dashboard-nav-delay.js" type="module"></script>
  <script src="/js/offcanvas-nav.js" type="module"></script>
  </body>
</html>
